{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"iw8IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,UCjBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACuB,IAApBG,EAASC,OACR,qBACEJ,UAAU,oBACV,UAAQ,oBAFV,gCAOAG,EAASE,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,UCbvCC,EAAW,SAAC,GAAD,QAAGC,KAAQV,EAAX,EAAWA,MAAOD,EAAlB,EAAkBA,KAAlB,OACtB,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,KCCQY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKV,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,EAAKC,QAGR,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGR,UAAU,iBAAb,SACGU,EAAKX,OAGR,cAAC,EAAD,CAAaI,SAAUO,EAAKP,eCnBnBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,U,qBCUX,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBO,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MACzC,MAWPZ,UARsBG,EAQGI,EAAKJ,GAPvBY,EAAmBC,QAAO,SAAAvB,GAAO,OAAIU,IAAOV,EAAQwB,WACpD,QAFT,IAAwBd,EALHS,KAgBRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38ae77be.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <>\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length === 0 ? (\n      <div\n        className=\"NoCommentsMessage\"\n        data-cy=\"NoCommentsMessage\"\n      >\n        No comments found.\n      </div>\n    ) : (\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    )}\n  </div>\n);\n","export const UserInfo = ({ user: { email, name } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentById(id) {\n  return commentsFromServer.filter(comment => id === comment.postId)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}